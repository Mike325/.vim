priority 1

#############################################################################
#
#                         Some missing Vimscript snippets
#
#                                    -`
#                    ...            .o+`
#                 .+++s+   .h`.    `ooo/
#                `+++%++  .h+++   `+oooo:
#                +++o+++ .hhs++. `+oooooo:
#                +s%%so%.hohhoo'  'oooooo+:
#                `+ooohs+h+sh++`/:  ++oooo+:
#                 hh+o+hoso+h+`/++++.+++++++:
#                  `+h+++h.+ `/++++++++++++++:
#                           `/+++ooooooooooooo/`
#                          ./ooosssso++osssssso+`
#                         .oossssso-````/osssss::`
#                        -osssssso.      :ssss``to.
#                       :osssssss/  Mike  osssl   +
#                      /ossssssss/   8a   +sssslb
#                    `/ossssso+/:-        -:/+ossss'.-
#                   `+sso+:-`                 `.-/+oso:
#                  `++:.  github.com/mike325/.vim  `-/+/
#                  .`                                 `/
#
#############################################################################

snippet fun "VimL function"
function! ${1:Name}(${2:arg1})
	${0:${VISUAL:" Statements}}
endfunction
endsnippet

snippet funs "VimL script function"
function! s:${1:Name}(${2:arg1})
	${0:${VISUAL:" Statements}}
endfunction
endsnippet

snippet sil "Silent command"
silent! ${0:${VISUAL:cmd}}
endsnippet

# snippet ex "execute cmd"
# execute '${0:${VISUAL:viml cmd}}'
# endsnippet

snippet try "try ... catch ... endtry"
try
	${1:${VISUAL:" Statements}}
catch $2
	$0
endtry
endsnippet

snippet pl "Plug 'plugin'"
Plug '$0'
endsnippet

snippet !ex "if !exists(plugin)"
if !exists('g:plugs["${1:${VISUAL:NAME}}"]')
	finish
endif
$0
endsnippet

snippet au "autogroup ... autogroup end"
augroup ${1:AU_NAME}
	autocmd!
	autocmd FileType `!p snip.rv = snip.ft` $2
augroup end
$0
endsnippet

snippet ex "executable()"
executable("${1:CMD}")$0
endsnippet

