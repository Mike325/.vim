priority 1

#############################################################################
#
#                            Override vim-snippets file
#
#                                    -`
#                    ...            .o+`
#                 .+++s+   .h`.    `ooo/
#                `+++%++  .h+++   `+oooo:
#                +++o+++ .hhs++. `+oooooo:
#                +s%%so%.hohhoo'  'oooooo+:
#                `+ooohs+h+sh++`/:  ++oooo+:
#                 hh+o+hoso+h+`/++++.+++++++:
#                  `+h+++h.+ `/++++++++++++++:
#                           `/+++ooooooooooooo/`
#                          ./ooosssso++osssssso+`
#                         .oossssso-````/osssss::`
#                        -osssssso.      :ssss``to.
#                       :osssssss/  Mike  osssl   +
#                      /ossssssss/   8a   +sssslb
#                    `/ossssso+/:-        -:/+ossss'.-
#                   `+sso+:-`                 `.-/+oso:
#                  `++:.  github.com/mike325/.vim  `-/+/
#                  .`                                 `/
#
#############################################################################

snippet if "if ... then (if)"
if ( ${1:condition} ) then
	${0:${VISUAL:#statements}}
endif
endsnippet

snippet while "while ... (done)"
while ( ${1:condition} ) do
	${0:${VISUAL:#statements}}
done
endsnippet

snippet case "case .. esac"
switch (${1:condition})
	case "${2:pattern}":
		${0:${VISUAL:#statements}}
		breaksw
endsw
endsnippet

snippet elif "else if ..."
else if ( ${1:condition} ) then
	${0:${VISUAL:#statements}}
endsnippet

snippet for "foreach ... end"
foreach i (${1:sequence})
	${0:${VISUAL:#statements}}
end
endsnippet

snippet while "while ... end"
while (${1:condition})
	${0:${VISUAL:#statements}}
end
endsnippet

snippet al "alias"
alias ${1:name} "$0"
endsnippet

snippet var "Create variable"
setenv ${1:name} "$0"
endsnippet

